{"version":3,"sources":["../src/classDecoration.js"],"names":["target","key","descriptor","decoratorInstance","decoratorArgs","createInstance","args","classDefined","name","instance","classInstanced"],"mappings":";;;;;;kBAAe,UAACA,MAAD,EAASC,GAAT,EAAcC,UAAd,EAA0BC,iBAA1B,EAA6CC,aAA7C,EAA+D;AAC1E,QAAIC,iBAAiB,SAAjBA,cAAiB;AAAA,0CAAIC,IAAJ;AAAIA,gBAAJ;AAAA;;AAAA,kDAAiBN,MAAjB,gBAA2BM,IAA3B;AAAA,KAArB;AACAH,sBAAkBI,YAAlB,CAA+BP,OAAOQ,IAAtC,EAA4CH,cAA5C,EAA4DD,aAA5D;AACA,WAAO,YAAa;AAAA,2CAATE,IAAS;AAATA,gBAAS;AAAA;;AAChB,YAAIG,WAAWN,kBAAkBO,cAAlB,CAAiCV,OAAOQ,IAAxC,EAA8CF,IAA9C,EAAoDD,cAApD,EAAoED,aAApE,CAAf;AACA,YAAI,OAAOK,QAAP,KAAoB,WAAxB,EAAqC;AACjCA,0DAAeT,MAAf,gBAAyBM,IAAzB;AACH;AACD,eAAOG,QAAP;AACH,KAND;AAOH,C","file":"classDecoration.js","sourcesContent":["export default (target, key, descriptor, decoratorInstance, decoratorArgs) => {\n    let createInstance = (...args) => new target(...args);\n    decoratorInstance.classDefined(target.name, createInstance, decoratorArgs);\n    return (...args) => {\n        let instance = decoratorInstance.classInstanced(target.name, args, createInstance, decoratorArgs);\n        if (typeof instance === 'undefined') {\n            instance = new target(...args);\n        }\n        return instance;\n    };\n}"]}